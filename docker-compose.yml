version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: dragon_pg
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  # Django Backend
  backend:
    build:
      context: ./dragon_backend_django
      dockerfile: Dockerfile
    container_name: dragon_backend_django
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./dragon_backend_django/.env
    ports:
      - "8000:8000"
    volumes:
      - ./dragon_backend_django:/app
    networks:
      - app-network

    # Vue Frontend
  frontend:
    build:
      context: ./dragon_frontend_vue
      dockerfile: Dockerfile
      target: dev
    container_name: dragon_frontend_vue
    ports:
      - "5173:5173"
    volumes:
      - ./dragon_frontend_vue:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]
    depends_on:
      - backend
    networks:
      - app-network

  # PgAdmin 
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: dragon_pgadmin
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD:  ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge